#include <stdio.h>
#include <stdlib.h>
#define MAX_REQUESTS 100
int calculateTotalHeadMovement(int requests[], int numRequests, int initialPosition) {
    int totalHeadMovement = 0;
    int currentHeadPosition = initialPosition;
    for (int i = 0; i < numRequests - 1; i++) 
    {
        for (int j = 0; j < numRequests - i - 1; j++)
        {
            if (requests[j] > requests[j + 1]) 
            {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }
    int initialIndex = 0;
    for (int i = 0; i < numRequests; i++)
    {
        if (requests[i] >= initialPosition) 
        {
            initialIndex = i;
            break;
        }
    }
    for (int i = initialIndex; i < numRequests; i++) 
    {
        totalHeadMovement += abs(currentHeadPosition - requests[i]);
        currentHeadPosition = requests[i];
    }
    totalHeadMovement += abs(currentHeadPosition - 0);
    currentHeadPosition = 0;
    for (int i = 0; i < initialIndex; i++)
    {
        totalHeadMovement += abs(currentHeadPosition - requests[i]);
        currentHeadPosition = requests[i];
    }
    return totalHeadMovement;
}
int main()
{
    int numRequests;
    int initialPosition;
    int requests[MAX_REQUESTS];
    printf("Enter the number of disk requests: ");
    scanf("%d", &numRequests);
    printf("Enter the initial head position: ");
    scanf("%d", &initialPosition);
    printf("Enter the disk requests (separated by spaces):\n");
    for (int i = 0; i < numRequests; i++) 
    {
        scanf("%d", &requests[i]);
    }
    int totalHeadMovement = calculateTotalHeadMovement(requests, numRequests, initialPosition);
    printf("Total head movement using C-SCAN: %d\n", totalHeadMovement);
    return 0;
}
