#include <stdio.h>
struct Process {
    int id;
    int burst_time;
};
void scheduleSJF(struct Process processes[], int n) 
{
    int time = 0; 
    int remaining_time[n];
    int completed[n];
    for (int i = 0; i < n; i++) {
        remaining_time[i] = processes[i].burst_time;
        completed[i] = 0;
    }
    printf("Execution Order: ");
    while (1) 
    {
        int min_burst_time = __INT_MAX__;
        int min_index = -1;
        for (int i = 0; i < n; i++) 
        {
            if (completed[i] == 0 && remaining_time[i] < min_burst_time && processes[i].burst_time > 0)
            {
                min_burst_time = remaining_time[i];
                min_index = i;
            }
        }
        if (min_index == -1) 
        {
            break;
        }
        printf("P%d ", processes[min_index].id);
        remaining_time[min_index]--;
        time++;
        if (remaining_time[min_index] == 0) {
            completed[min_index] = 1;
        }
    }
    printf("\n");
}
int main() 
{
    struct Process processes[] = {{1, 6}, {2, 8}, {3, 7}, {4, 3}};
    int n = sizeof(processes) / sizeof(processes[0]);
    printf("Number of Processes: %d\n", n);
    scheduleSJF(processes, n);
    return 0;
}
